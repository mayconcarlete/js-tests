# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: Run a Hello World script
        run: echo Hello, world!
      - name: Echo Variable Name
        run: echo $(printenv HOME)
      - name: Test env names
        env:
          TEST_MODE: true
          DEV_MODE: false
          QA_MODE: false
          LOCAL_DATABASE_MODE: true
          SKIP_INIT: false
          REPORTING_MICROSERVICE_PORT: 8085
        run: |
          echo "TEST_MODE: ${TEST_MODE} - DEV_MODE: ${DEV_MODE} -REPORTING_MICROSERVICE_PORT: ${REPORTING_MICROSERVICE_PORT}"
          node index.js

      - name: get sha values
        run: |
          echo "FILES_CHANGED=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)" >> $GITHUB_ENV

      - name: branches SHA
        if: contains('index.js, package.json', 'packsage.json') || contains('index.js package.json package-lock.json', 'package-Alock.json')
        run: echo "RUN_ALL_TESTS=true" >> $GITHUB_ENV
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "RUN ALL TESTS: ${RUN_ALL_TESTS} valor"
          echo "FILES_CHANGED: ${FILES_CHANGED}"
          echo $RUN_ALL_TESTS

          echo Add other actions to build,
          echo test, and deploy your project.
